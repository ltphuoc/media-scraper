services:
  db:
    image: postgres:16
    restart: always
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7
    restart: always
    env_file:
      - .env
    ports:
      - '${REDIS_PORT}:6379'
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 10

  api:
    build: ./api
    restart: always
    env_file:
      - .env
    ports:
      - '${API_PORT}:4000'
    environment:
      PORT: ${API_PORT}
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium
      PUPPETEER_SKIP_DOWNLOAD: 'true'
      QUEUE_CONCURRENCY: ${QUEUE_CONCURRENCY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD-SHELL', 'wget -qO- http://localhost:4000/api/health || exit 1']
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

  worker:
    build: ./api
    restart: always
    entrypoint: ['dumb-init', 'node', 'dist/lib/queue.js']
    env_file:
      - .env
    environment:
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium
      PUPPETEER_SKIP_DOWNLOAD: 'true'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  landing:
    build: ./landing
    restart: always
    env_file:
      - .env
    ports:
      - '${FRONTEND_PORT}:3000'
    environment:
      NEXT_PUBLIC_BASIC_USER: ${BASIC_AUTH_USER}
      NEXT_PUBLIC_BASIC_PASS: ${BASIC_AUTH_PASS}
    depends_on:
      api:
        condition: service_healthy

volumes:
  db_data:
